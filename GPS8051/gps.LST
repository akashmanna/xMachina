C51 COMPILER V9.54   GPS                                                                   03/19/2017 02:26:28 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE GPS
OBJECT MODULE PLACED IN ..\gps.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE gps.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2) OBJECT(..\gps.
                    -obj)

line level    source

   1          /* Basic program to show latitude and longitude on LCD extracted from GPGGA statement */
   2           
   3          #include<reg51.h>
   4          #define port2 P2
   5          sbit rs = P1^0;
   6          sbit rw = P1^1;
   7          sbit e = P1^2;
   8          char info[70];
   9          char test[6]={"$GPRMC"};
  10          char comma_position[15];
  11          unsigned int check=0,i;
  12          unsigned char a;
  13          
  14          void receive_data();
  15          void lcd_latitude();
  16          void lcd_longitude();
  17           
  18          //DELAY FUNCTION
  19          void delay(unsigned int msec) {
  20   1        int i,j ;
  21   1        for(i=0;i<msec;i++)
  22   1        for(j=0;j<1275;j++); 
  23   1      }
  24           
  25          // LCD COMMAND SENDING FUNCTION
  26          void lcd_cmd(unsigned char item)  {
  27   1        port2 = item;
  28   1        rs= 0;
  29   1        rw=0;
  30   1        e=1;
  31   1        delay(1);
  32   1        e=0;
  33   1        return;
  34   1      } 
  35           
  36          // LCD DATA SENDING FUNCTION
  37          void lcd_data(unsigned char item) {
  38   1        port2 = item;
  39   1        rs= 1;
  40   1        rw=0;
  41   1        e=1;
  42   1        delay(1);
  43   1        e=0;     
  44   1        return;
  45   1      }
  46           
  47           // LCD STRING SENDING FUNCTION 
  48          void lcd_string(unsigned char *str) {
  49   1        int i=0;
  50   1        while(str[i]!='\0') {
  51   2          lcd_data(str[i]);
  52   2          i++;
  53   2          delay(10);
  54   2        }
C51 COMPILER V9.54   GPS                                                                   03/19/2017 02:26:28 PAGE 2   

  55   1        return;
  56   1      }
  57           
  58          // SERIAL PORT SETTING
  59          void serial() {
  60   1        TMOD=0x20;      //MODE=2
  61   1        TH1=0xfd;      // 9600 BAUD
  62   1        SCON=0x50  ;    // SERIAL MODE 1 ,8- BIT DATA ,1 STOP BIT ,1 START BIT , RECEIVING ON
  63   1        TR1=1;          //TIMER START
  64   1      }
  65           
  66          void find_comma() {
  67   1        unsigned int i,count=0;
  68   1        for(i=0;i<70;i++) { 
  69   2          if(info[i]==',')  {
  70   3            comma_position[count++]=i;
  71   3          }
  72   2        }
  73   1      }
  74          
  75          void compare()  {  
  76   1        IE=0x00;        //Interrupt disable 
  77   1        find_comma();    //Function to detect position of comma in the string
  78   1        lcd_latitude();   //Function to show Latitude
  79   1        lcd_longitude(); //Function to show Longitude
  80   1        check=0;
  81   1        IE=0x90;    //Interrupt enable
  82   1      }
  83          
  84          
  85          void receive_data()      interrupt 4   
  86          {
  87   1        info[check++]=SBUF;   //Read SBUF
  88   1        if(check<7)  {                    //Condition to check the required data
  89   2          if(info[check-1]!=test[check-1])
  90   2            check=0;
  91   2          }
  92   1        RI=0;
  93   1      }
  94          
  95          void lcd_shape()  {   //Function to create shape of degree
  96   1        lcd_cmd(64);
  97   1        lcd_data(10);
  98   1        lcd_data(17);
  99   1        lcd_data(17);
 100   1        lcd_data(10);
 101   1        lcd_data(0);
 102   1        lcd_data(0);
 103   1        lcd_data(0);
 104   1        lcd_data(0);
 105   1      }
 106          
 107          void lcd_latitude()  {      //Function to display Latitude
 108   1        unsigned int c2=comma_position[2]; //Position of second comma
 109   1        //lcd_shape();  
 110   1        lcd_cmd(0x80);          //Move cursor to position 6 of line 1
 111   1        lcd_string("LAT ");  //Showing Latitude 
 112   1        
 113   1        lcd_data(info[c2+1]); 
 114   1        lcd_data(info[c2+2]); 
 115   1        lcd_data(0);          // TO display degree symbol 
 116   1        
C51 COMPILER V9.54   GPS                                                                   03/19/2017 02:26:28 PAGE 3   

 117   1        for(i=3;i<=9;i++) {
 118   2          lcd_data(info[c2+i]);
 119   2        }
 120   1        lcd_data(0x27); 
 121   1        lcd_data(info[c2+11]);
 122   1      } 
 123           
 124          void lcd_longitude()  {
 125   1        unsigned int c4=comma_position[4];
 126   1        //lcd_shape();    
 127   1        lcd_cmd(0xc0);
 128   1        lcd_string("LON"); //Showing Longitude
 129   1      
 130   1        lcd_data(info[c4+1]); 
 131   1        lcd_data(info[c4+2]); 
 132   1        lcd_data(0);          // TO display degree symbol 
 133   1        for(i=3;i<=10;i++)  {
 134   2          lcd_data(info[c4+i]);
 135   2        }
 136   1        lcd_data(0x27);
 137   1        lcd_data(info[c4+12]);
 138   1      }
 139          
 140          
 141          void main() {
 142   1        serial();
 143   1        lcd_cmd(0x38);         //2 LINE, 5X7 MATRIX
 144   1        lcd_cmd(0x80);
 145   1        lcd_cmd(0x0F);         //DISPLAY ON, CURSOR BLINKING
 146   1        lcd_string("GPS SYSTEM");  //Showing Latitude 
 147   1        /*
 148   1        lcd_cmd(0xC0);
 149   1        lcd_string("Text Works");
 150   1        */
 151   1        IE=0x90;
 152   1        while(1)  {
 153   2          if(check==69)
 154   2          compare();
 155   2        }
 156   1      }
 157           
 158           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    526    ----
   CONSTANT SIZE    =     20    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     96       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
